{"version":3,"sources":["App.js","firebase.js","components/Auth/Login.js","components/Auth/Register.js","index.js"],"names":["App","react_default","a","createElement","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","state","email","password","errors","loading","displayErrors","map","error","i","key","message","handleChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","signedInUser","console","log","catch","err","concat","_ref","handleInputError","inputName","some","toLowerCase","includes","_this$state","this","Grid","textAlign","verticalAlign","className","Column","style","maxWidth","Header","as","icon","color","Icon","Form","onSubmit","size","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","Button","disabled","length","Message","Link","to","React","Register","username","passwordConfirmation","usersRef","database","ref","isFormEmpty","isPasswordValid","_ref2","createUserWithEmailAndPassword","createdUser","user","updateProfile","displayName","photoURL","md5","saveUser","child","uid","set","avatar","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.2b4d118f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return <div>App</div>;\n  }\n}\n\nexport default App;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyArBnNqE8m5rucciUZ5zIcV2pEOnq3nTOo\",\n  authDomain: \"hasegawa-app.firebaseapp.com\",\n  databaseURL: \"https://hasegawa-app.firebaseio.com\",\n  projectId: \"hasegawa-app\",\n  storageBucket: \"\",\n  messagingSenderId: \"224089872497\",\n  appId: \"1:224089872497:web:a8dd64d091f6a145\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            ログイン\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"登録したメールアドレス\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"パスワード\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                ログイン\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            アカウントをお持ちでない方は <Link to=\"/register\">新規登録</Link> へ\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"未記入の項目があります。\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"パスワードが無効です。\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            アカウントを作成する\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"ユーザ名\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"メールアドレス\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"パスワード\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"パスワードの確認\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                登録\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            既に登録済みの方は <Link to=\"/login\">ログイン</Link> へ\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Root = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Switch>\n  </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}